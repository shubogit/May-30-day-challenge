link:https://leetcode.com/explore/challenge/card/may-leetcoding-challenge/536/week-3-may-15th-may-21st/3333/

// used the previous prob. (Find all Anagrams in string to solve this)


class Solution {
    public boolean checkInclusion(String s1, String s2) {
        // here s1 is p and s2 is s , that is if anagram of s1 id found in s2 return  true..
        List<Integer> ans = new ArrayList<>();
        
        int slen = s2.length(); int plen = s1.length();
        
        int char_counts[] = new int[26];
        for(char ch : s1.toCharArray()) {
            char_counts[ch-'a']++;
        }
        
        int left = 0;
        int right = 0;
        int count = s1.length();
        
        while(right < s2.length()) {
            if(char_counts[s2.charAt(right++)-'a']-- >= 1) count--;
            if(count == 0) ans.add(left);
            if(right -left == s1.length() && char_counts[s2.charAt(left++) -'a']++ >= 0)
                count++;
        }
        if(ans.size() > 0) {
            return true;
        }
        
        return false;
    }
}
